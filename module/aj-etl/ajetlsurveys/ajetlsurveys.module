<?php
/**
 * @file
 * A chron module to create custom tables and load data from CouchDb into these tables.
 */

error_reporting(E_ALL);
ini_set("display_errors", 1);





/**
 * Cron job is creating the queue cron job.
 *
 */
function ajetlsurveys_cron() {

    $queue = DrupalQueue::get('ajetlsurveys');
    $queue->createItem("arg1");
}

/**
 * Cron jobs info.
 *
 * @return array
 */
function ajetlsurveys_cron_queue_info()
{

    watchdog("ajetlsurveys", "INSIDE CRON QUEUE INFO");

    $queues = array();

    //cron is run at 2:00am
    //if(date('G')==2)
    //{
    $queues['ajetlsurveys'] = array(
        'worker callback' => 'load_surveys_worker',
        'time' => 300, // time in seconds, this is the duration that the job will be CALLED, e.g.
        // after it finish it will be called again until the time is up.
    );
    //}

    return $queues;
}


/**
 * The queue job worker. Query registration from couchDB descending and load them into mySQL database.
 *
 */
function load_surveys_worker()
{
    //watchdog("ajetlsurveys", "load_surveys_worker JOB IS CALLED");

    ajetllog_log("ajetlsurveys", "MESSAGE", "PROCESSING STARTED");

    global $base_url;

    // set module global variables
    ajetlsurveys_setModuleVariables();

    $req_url = 'http://localhost:5984/coconut/_design/coconut/_view/resultsByQuestionAndComplete?startkey=%22Participant%20Survey-es%3Atrue%3Az%22&endkey=%22Participant%20Survey-es%3Atrue%22&descending=true&include_docs=false';

    //TBD Uncomment when deploying to prod, the $base_url is not write when deploying on Windows because it has /drupal in the link
    //$req_url = $base_url.':5984/coconut/_design/coconut/_view/resultsByQuestionAndComplete?startkey=%22Participant%20Registration-es%3Atrue%3Az%22&endkey=%22Participant%20Registration-es%3Atrue%22&descending=true&include_docs=false';

    // prepare the request options
    $req_options = array(
        'method' => 'GET',
        'headers' => array(
            'Content-Type' => 'application/json'
        ));

    // query couchdb data
    $couch_response = drupal_http_request( $req_url, $req_options );

    // decode to json objects
    $rows = drupal_json_decode( $couch_response->data)['rows'];

    $size = sizeof($rows);

    ajetllog_log("ajetlsurveys", "MESSAGE", "******Rows fetched:".$size);

    $i = 0;

    foreach ( $rows as $one_row ){
        list($type, $isCompleted, $lastModified1,$lastModified2, $lastModified3, $lastModified4) = explode(":", $one_row['key']);

        // for some reason the query returns surveys at the end
        if ($type != "Participant Survey-es")
            continue;
        // lastModified is in format as 2014-08-11T13:50:41-03:00 so need to re-create
        $lastModified = $lastModified1.':'.$lastModified2.':'.$lastModified3.':'.$lastModified4;

        // ignore if the date is in the future - not sure how that happened
        if (!ajetlsurveys_isDateInFuture($lastModified)){
          // check if the record with the same id and last modified date already exist
         $record = ajetlsurveys_ajetlsurveys_getSurveyByIdAndModifiedDate($one_row['id'], $lastModified);

         if ($record != null) {
            //ajetllog_log("ajetlsurveys", "MESSAGE", "Found same exact record and stopped loading surveys.");
            //break;
             continue;
         }
       }


        ajetlsurveys_loadSurvey($one_row['id'], $lastModified);
        $i++;


        /*if ($i === 1000)
            break;*/

    }

    ajetlsurveys_deleteModuleVariables();
    ajetllog_log("ajetlsurveys", "MESSAGE", "Document processed".$i);

}



/**
 * Implement hook_enable()
 */
function ajetlsurveys_enable() {
    //Check if table exists, if not install the schema.
    /* if(db_table_exists('aj_etlsurvey') == FALSE) {
         drupal_install_schema('ajetlsurveys');
     }*/


}


/**
 * Delete module variables.
 */
function ajetlsurveys_deleteModuleVariables(){
    variable_del("ajSurveyColumns");
    variable_del("surveyColumnMap");
}

/**
 *
 * Use variable_set() to set module global variables.
 *
 *
 */
function ajetlsurveys_setModuleVariables(){
    // retrieve aj-survey table columns
    $ajSurveyColumns = drupal_schema_fields_sql("aj_survey");
    // set the columns as variable
    variable_set("ajSurveyColumns", $ajSurveyColumns);

 /**
 * These is mapping for columns for column name - survey document key. We need that
 * because the column names were becoming too big. The mySQL limit is 64 characters but
 * it looks kind of ugly when they are so long.
 */
 $surveyColumnMap = array("81GInhalantes"=>"81GInhalantescomopegamentocementopinturaspray",
     "83Quéedadtenías"=>"83Quéedadteníaslaprimeravezquetuvisterelacionessexuales",
     "87ANoutilicéningún"=>"87ANoutilicéningúnmétodoparaprevenirelembarazo",
     "87ERitmoma"=>"87ERitmomantenerrelacionesendíasnofértilesocuandonohayovulación",
     "87FRetirod"=>"87FRetirodetenerlapenetraciónantesdeeyacular",
     "87IInyecci"=>"87IInyeccióncomoDepoProveraunparcheOrthoEvraounanillocomoNuvaRing",
     "87JImplant"=>"87JImplanteonorplantcomoImplanonoNexplanon",
     "15Cuálesel"=>"15Cuáleselniveleducativomásaltoquehasaprobado",
     "23Hassidos"=>"23Hassidosuspendidoadelaescuelaalgunavez",
     "25Hasreali"=>"25Hasrealizadoalgunavezuntrabajoporpagaoganancia",
     "26Durantel"=>"26Durantelaúltimasemanarealizastealgúntrabajoporpagaoganancia",
     "33Actualme"=>"33Actualmenterealizasalgúntrabajoenelquenosetepagaonorecibesganancia",
     "39Hasbusca"=>"39Hasbuscadounnuevoomejorempleoenelúltimomes",
     "40Hasparti"=>"40Hasparticipadoenalgúnprogramadedesarrollodeempleo",
     "41Conquéfr"=>"41Conquéfrecuenciatepreocupaservíctimadeladelincuenciaentubarrio",
     "42Conquéfr"=>"42Conquéfrecuenciatepreocupaservíctimadeladelincuenciaentuescuelaouniversidad",
     "44Entuopin"=>"44Entuopiniónladelincuenciaesunproblemagraveentubarrio",
     "45Tepreocu"=>"45Tepreocupalapresenciadepandillasentubarrio",
     "46Lapreocu"=>"46Lapreocupaciónporladelincuenciaocrimenteimpiderealizarlascosasquedeseashacerentubarrio",
     "48Hassidot"=>"48Hassidotransportadoenunapatrullapolicialporunaredadaoporsospechadelapolicíahaciati",
     "50Hassidod"=>"50HassidodetenidoporlaPolicíaacusadodecometeralgúndelito",
     "51Algunode"=>"51AlgunodetusamigoshasidodetenidoalgunavezporlaPolicía",
     "52Enlosúlt"=>"52Enlosúltimos12meseshastomadoalgodeunatiendasinpagarporella",
     "53Enlosúlt"=>"53Enlosúltimos12meseshasparticipadoenalgunapeleaoriña",
     "54Enlosúlt"=>"54Enlosúltimos12meseshasllevadouncuchillopuñalomachete",
     "55Enlosúlt"=>"55Enlosúltimos12meseshasllevadounarmadefuego",
     "56Enlosúlt"=>"56Enlosúltimos12meseshasvistoaalguienqueestabasiendoapuñaladocortadoobaleado",
     "57Enlosúlt"=>"57Enlosúltimos12mesesalguientehaamenazadoconuncuchilloounapistola",
     "58Enlosúlt"=>"58Enlosúltimos12mesesalguientehacortadooapuñaladotangravementequetuvistequeiraunmédico",
     "59Enlosúlt"=>"59Enlosúltimos12mesesalguientehadisparadoconunarmadefuego",
     "60Enlosúlt"=>"60Enlosúltimos12meseshasamenazadoaalguienconcortarleapuñalarleodispararle",
     "61Enlosúlt"=>"61Enlosúltimos12meseshasamenazadoaalguienconuncuchillooarma",
     "62Enlosúlt"=>"62Enlosúltimos12meseshascortadooapuñaladoaalguien",
     "63Enlosúlt"=>"63Enlosúltimos12meseslehasdisparadoaalguien",
     "64Enlosúlt"=>"64Enlosúltimos12meseshastenidoalgúnamigoomiembrodetufamiliaquelehandisparadocortadooapuñalado",
     "65Hasdañad"=>"65Hasdañadoodestruidoapropósitoartículosquenotepertenecen",
     "70Algunave"=>"70AlgunavezhasrobadoalgodeunatiendaoalgoquenotepertenecíaqueteníaunvalormenordeRD200",
     "71Algunave"=>"71AlgunavezharobadoalgodeunatiendaoalgoquenotepertenecíaqueteníaunvalormayordeRD200incluyendocarros",
     "73AActualm"=>"73AActualmenteestásinvolucradoenunapandilla",
     "74Comparte"=>"74Compartestiempooterelacionasconmiembrosdeunapandilla",
     "75Enlosúlt"=>"75Enlosúltimos12meseshashabladoocompartidoconalguienborrachoodrogado",
     "76Algunave"=>"76Algunavezhastomadounabebidaalcohólicaunacopavasoenteronosólounsorbo",
     "76AEnlosúl"=>"76AEnlosúltimos12meseshasconsumidoalcohol",
     "76BEnlosúl"=>"76BEnlosúltimos12meseshastomadocincovasoscopasomásdebebidasalcohólicasenelmismodía",
     "77Hasproba"=>"77Hasprobadoalgunavezcualquieradeestasdrogasmarihuanacocaínaheroínapastillascrackcementoocualquierotracosaparadrogarse",
     "78Hasusado"=>"78Hasusadoenalgunaocasiónunaagujaparainyectartedroga",
     "85Concuánt"=>"85Concuántaspersonasdiferenteshastenidorelacionessexualesenlosúltimos12meses",
     "86Laúltima"=>"86Laúltimavezquetuvisterelacionessexualestuotucompañeroautilizóuncondón",
     "88Algunave"=>"88Algunavezalguientehaobligadoatenerrelacionessexuales",
     "89Algunave"=>"89Algunavezhastenidorelacionessexualespordinerobienescelularesviviendaetcoserviciosproteccióncomidaetc",
     "89ASilares"=>"89ASilarespuestaesafirmativaCuándofuelaúltimavez",
     "90Siquisie"=>"90Siquisierascompraruncondóncreesquepodríasencontrarlo",
     "91Siquisie"=>"91Siquisierastenersexocreesquepodriasconvenceratuparejadequeusecondónencasodequeélellaseniegueausarlo",
     "92Tesiente"=>"92Tesientescapazdetenerunaconversaciónabiertayhonestasobresexoconsuspadres",
     "93Algunave"=>"93Algunavezhastenidounaconversaciónabiertayhonestasobresexocontuspadres",
     "94Algunave"=>"94Algunavezalguientehaenseñadoohabladoacercadelasinfeccionesdetransmisiónsexual",
     "95Algunave"=>"95Algunavezlehanenseñadoacercadeprevencióndeembarazo",
     "96Algunave"=>"96AlgunavezlehanenseñadoacercalainfecciónporVIHSida",
     "89ASilares"=>"89ASilarespuestaesafirmativaCuándofuelaúltimavez",
 	"17EnElUltimoAnoCuantaVecesHasFaltadoEscuela"=>"17Enelúltimoañocuántasveceshasfaltadoalaescuelaporundíacompletosinexcusa",
 	"19ActualmenteEstasAsistiendoAlgunProgramaDeEduca"=>"19ActualmenteestasasistiendoaalgúnprogramadeeducaciónparajóvenesyadultosMarcalaopciónqueaplique",
 	"76BEnLosUltimos12MesesHasTomado5Vasos"=>"76BEnlosúltimos12meseshastomadocincovasoscopasomásdebebidasalcohólicasenelmismodía",
 	"96AOrientadoraoPsicólogoadelaescuela"=>"96AOrientadoraoPsicólogoadelaescuela",
 	"96APadreoMadre"=>"96APadreoMadre",
 	"96APromotoradeSalud"=>"96APromotoradeSalud",
 	"96AProfesoradelaescuela"=>"96AProfesoradelaescuela",
  	"96AInternet"=>"96AInternet",
 	"96AAmigos"=>"96AAmigos",
  	"96AOtroEspecifique"=>"96AOtroEspecifique",
  );

    variable_set("surveyColumnMap", $surveyColumnMap);
}
/**
 * Opens the document by Id and returns the JSON object.
 *
 * @param $id
 */
function ajetlsurveys_openDocById($id){
    // TBD: changed hard coded localhost link
    $req_url = 'http://localhost:5984/coconut/'.$id;

    $req_options = array(
        'method' => 'GET',
        'headers' => array(
            'Content-Type' => 'application/json'
        ));

    $couch_response = drupal_http_request( $req_url, $req_options );
    $doc = drupal_json_decode( $couch_response->data);


    return $doc;

}

/**
 * Generates the first insert query e.g. .(col1, col2, col3...). It's driven by the aj_survey table columns.
 *
 * @param $doc
 *
 */
function ajetlsurveys_genInsertQueryPart1($doc){
    $query = "";

    $ajSurveyColumns = variable_get("ajSurveyColumns");



    foreach ($ajSurveyColumns as $col){
        if ($col === "id" || $col === "changed")
            continue;

        $query = $query.$col.", ";


    }

    // clean the last ","
    $len = strlen($query);
    $query =substr($query, 0, $len-2);

    return $query;

}


/**
 * Generates the values() insert statement.
 *
 * @param $doc
 *
 */
function ajetlsurveys_genInsertQueryPart2($doc){
    $query = "";
    $key = "";
    $val = "";

    $ajSurveyColumns = variable_get("ajSurveyColumns");
    $surveyColumnMap = variable_get("surveyColumnMap");

    foreach ($ajSurveyColumns as $col) {
        // skip these
        if ($col === "id" || $col === "changed")
            continue;

        if (array_key_exists($col, $surveyColumnMap))
            $key = $surveyColumnMap[$col];
        else
            $key = $col;

        if ($key === "createdAt" || $key === "lastModifiedAt") {
            $val = ajetlsurveys_couchDateTime2Mysql($doc[$key]);
            $query = $query . $val . " ";
        }else if ($key === "created"){
            $val = " NOW() ";
            $query = $query . $val . " ";
        }else if ($key === "Fecha"){
            $val = ajetlsurveys_processFecha($doc);
            $query = $query . $val . " ";
        }else if ($key === "27Mes"){
        	if (isset($doc['27Mes'])) {
            	$val = $doc[$key];
        	} else {
//         		ajetllog_log("ajetlsurveys", "MESSAGE", "27Mes is not set for " . $doc['uuid']);
        		$val = '';
        	}
            if (strlen($val) > 16)
                $val = "";
            $query = $query . "'" . $val . "' ";
        } else if ($key === "13Afecha1" || $key === "13Asexo1" || $key === "13AMismaCasa1" || $key === "13AActaDeNacimiento1") {

        	if ($key === "13Afecha1") {
	        	if(isset($doc['Fechadenacimiento'][0])){
	        		$val = $doc['Fechadenacimiento'][0];
	        	} else {
	        		$val = "1900-01-01";
	        	}
        	}

        	if ($key === "13Asexo1") {
	        	if(isset($doc['Sexo'][0])){
		        	$val = $doc['Sexo'][0];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AMismaCasa1") {
	        	if(isset($doc['Ustedyellaniñoaviveenlamismacasa'][0])){
		        	$val = $doc['Ustedyellaniñoaviveenlamismacasa'][0];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AActaDeNacimiento1") {
	        	if(isset($doc['Esteniñotieneunactadenacimientodominicana'][0])){
		        	$val = $doc['Esteniñotieneunactadenacimientodominicana'][0];
		        } else {
		        	$val = "";
		        }
        	}

        	$query = $query . "'" . $val . "' ";
        } else if ($key === "13Afecha2" || $key === "13Asexo2" || $key === "13AMismaCasa2" || $key === "13AActaDeNacimiento2" ) {
        if ($key === "13Afecha2") {
	        	if(isset($doc['Fechadenacimiento'][1])){
	        		$val = $doc['Fechadenacimiento'][1];
	        	} else {
	        		$val = "1900-01-01";
	        	}
        	}

        	if ($key === "13Asexo2") {
	        	if(isset($doc['Sexo'][1])){
		        	$val = $doc['Sexo'][1];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AMismaCasa2") {
	        	if(isset($doc['Ustedyellaniñoaviveenlamismacasa'][1])){
		        	$val = $doc['Ustedyellaniñoaviveenlamismacasa'][1];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AActaDeNacimiento2") {
	        	if(isset($doc['Esteniñotieneunactadenacimientodominicana'][1])){
		        	$val = $doc['Esteniñotieneunactadenacimientodominicana'][1];
		        } else {
		        	$val = "";
		        }
        	}
        	$query = $query . "'" . $val . "' ";
        } else if ($key === "13Afecha3" || $key === "13Asexo3" || $key === "13AMismaCasa3" || $key === "13AActaDeNacimiento3") {

        	if ($key === "13Afecha3") {
	        	if(isset($doc['Fechadenacimiento'][2])){
	        		$val = $doc['Fechadenacimiento'][2];
	        	} else {
	        		$val = "1900-01-01";
	        	}
        	}

        	if ($key === "13Asexo3") {
	        	if(isset($doc['Sexo'][2])){
		        	$val = $doc['Sexo'][2];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AMismaCasa3") {
	        	if(isset($doc['Ustedyellaniñoaviveenlamismacasa'][2])){
		        	$val = $doc['Ustedyellaniñoaviveenlamismacasa'][2];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AActaDeNacimiento3") {
	        	if(isset($doc['Esteniñotieneunactadenacimientodominicana'][2])){
		        	$val = $doc['Esteniñotieneunactadenacimientodominicana'][2];
		        } else {
		        	$val = "";
		        }
        	}
        	$query = $query . "'" . $val . "' ";
        } else if ($key === "13Afecha4" || $key === "13Asexo4" || $key === "13AMismaCasa4" || $key === "13AActaDeNacimiento4") {

        	if ($key === "13Afecha4") {
	        	if(isset($doc['Fechadenacimiento'][3])){
	        		$val = $doc['Fechadenacimiento'][3];
	        	} else {
	        		$val = "1900-01-01";
	        	}
        	}

        	if ($key === "13Asexo4") {
	        	if(isset($doc['Sexo'][3])){
		        	$val = $doc['Sexo'][3];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AMismaCasa4") {
	        	if(isset($doc['Ustedyellaniñoaviveenlamismacasa'][3])){
		        	$val = $doc['Ustedyellaniñoaviveenlamismacasa'][3];
		        } else {
		        	$val = "";
		        }
        	}

            if ($key === "13AActaDeNacimiento4") {
	        	if(isset($doc['Esteniñotieneunactadenacimientodominicana'][3])){
		        	$val = $doc['Esteniñotieneunactadenacimientodominicana'][3];
		        } else {
		        	$val = "";
		        }
        	}

        	$query = $query . "'" . $val . "' ";
        } else {
            if (is_array($val)){
                $val = $val[0];
            }
            if (array_key_exists($key, $doc)) {
                //Support for "Fechadenacimiento" field that is one value but it's stored as an array
                if (is_array($doc[$key])) {
                    foreach ($doc[$key] as $v){
                        //ajetllog_log("ajetlsurveys", "MESSAGE", "VAL 0 is " . $v);
                        $val = $v;
                    }
                }else
                   $val = $doc[$key];

                $pos = stripos($val, "'");
                if ($pos > 0)
                    $val = str_replace("'", "\'", $val);

            }else {
                $val = "";
            }
            $query = $query . "'" . $val . "' ";
        }

         $query = $query.",";

    }

    // clean the last ","
    $len = strlen($query);
    $query =substr($query, 0, $len-1);

    return $query;

}


/**
 * Inserts data into aj_etlsurvey table.
 *
 * @param $id
 * @param $lastModifiedDate
 */
function ajetlsurveys_insertSurvey($doc){
    $q1 = ajetlsurveys_genInsertQueryPart1($doc);
    $q2 = ajetlsurveys_genInsertQueryPart2($doc);
    $query = "INSERT INTO {aj_survey} (".$q1.") VALUES(".$q2.")";


//     watchdog('claudia', 'heelo'.$query);

    try{
        $result = db_query($query);
    }catch(Exception $e){
        ajetllog_error("ajetlsurveys", "MySQL ERROR", "MySQL error.", $e->getMessage() . '. uuid: '. $doc['uuid'], $doc['provider_id']);
//  		ajetllog_error("ajetlsurveys", "MySQL ERROR", $query, "");
    }


}




/**
 * Query aj_etlsurvey table for record by _id and lastModifiedAt date.
 *
 * @param $_id
 * @param $lastModifiedAt
 * @return null if record does not exist
 *         the record if exist
 */
function ajetlsurveys_ajetlsurveys_getSurveyByIdAndModifiedDate($_id, $lastModifiedAt)
{
    $retRecord = null;

    $sqlLastModifiedAt = ajetlsurveys_couchDateTime2Mysql($lastModifiedAt);

    $result = db_query("SELECT t.id FROM {aj_survey} t WHERE t._id = :_id AND t.lastModifiedAt=".$sqlLastModifiedAt, array(':_id' => $_id));


    if ($result == null) {
        return null;
    }

    foreach ($result as $record) {
        $retRecord = $record;
        break;
    }

    return $retRecord;

}

/**
 * Query aj_etlsurvey table by _id.
 *
 * @param $_id
 * @return null if record not found
 *         the record if found
 */
function ajetlsurveys_getSurveyById($_id)
{
    $retRecord = null;
    $result = db_query('SELECT t.id, t._id, t.lastModifiedAt FROM {aj_survey} t WHERE t._id = :_id', array(':_id' => $_id));

    if ($result == null) {
        return null;
    }

    foreach ($result as $record) {
        $retRecord = $record;
        break;
    }

    return $retRecord;


}


/**
 * Query aj_etlsurvey table by _id and lastModifiedAt DIFFERENT then the input $lastModifiedAt.
 *
 * @param $_id
 * @param $lastModifiedAt
 * @return null if record is not found
 *         the record if found
 */
function ajetlsurveys_getSurveyByIdDifferentDate($_id, $lastModifiedAt)
{
    $retRecord = null;
    $sqlLastModifiedAt = ajetlsurveys_couchDateTime2Mysql($lastModifiedAt);
    $result = db_query("SELECT t.id FROM {aj_survey} t WHERE t._id = :_id AND t.lastModifiedAt<>".$sqlLastModifiedAt, array(':_id' => $_id));


    if ($result == null) {
        return null;
    }

    foreach ($result as $record) {
        $retRecord = $record;
        break;
    }

    return $retRecord;



}

/**
 * First it checks for same _id AND different lastModifiedAt date. If record found
 * deletes the record before inserting the modified document. If record is not found
 * insert the data into the aj_etlsurvey table.
 *
 * @param $id
 * @param $lastModifiedDate
 */
function ajetlsurveys_loadSurvey($_id, $lastModifiedAt){

    // check if the record with the same id but different modified date already exist
    $record = ajetlsurveys_getSurveyByIdDifferentDate($_id, $lastModifiedAt);

    // TBD: Maybe need to update the existing document, not delete before inserting. However because
    // of the fast approaching deadline do this for now.

    // record has been changed so delete the old record before inserting
    if ($record != null) {
        db_query("DELETE FROM {aj_survey} WHERE _id='".$_id."'");
    }


    // fetch the document from couch db
    $doc = ajetlsurveys_openDocById($_id);

    // can not open the document
    if (array_key_exists("error", $doc)){
        ajetllog_log("ajetlsurveys", "MESSAGE", "Survey document DOES NOT EXIST: ".$_id);
    }else {
        // insert the record
        ajetlsurveys_insertSurvey($doc);
    }

}


/**
 *
 * Checks if the date is in the future.
 *
 * @param $dt
 */
function ajetlsurveys_isDateInFuture($dt)
{
    // remove the last 6 chars, e.g. the couchDB time zone
    $dt = substr($dt, 0, 10);


    if (strtotime($dt) > strtotime('today'))
        return true;


    return false;
}




/**
 *
 * Removes the last 6 characters (the timezone) from couchDB date.
 *
 * Example: converts 2013-11-29T09:40:10-03:00 to 2013-11-29T09:40:10 and
 * adds STR_TO_DATE so the final string will be STR_TO_DATE('2013-11-29T09:40:10', '%Y-%m-%dT%H:%i:%S').
 *
 */
function ajetlsurveys_couchDateTime2Mysql($dt){

    // remove the last 6 chars, e.g. the couchDB time zone
    $len = strlen($dt);
    $dt = substr($dt, 0, $len - 6);

    return " STR_TO_DATE('".$dt."', '%Y-%m-%dT%H:%i:%S')";
}


/**
 *

 * Example: converts 23/10/2013 to STR_TO_DATE('23/10/2013', '%d/%m/%Y').
 *  Note, Fecha might be empty since we added this field to the survey
 *  on 9/5/2014. We did not have this in the past.
 *
 * Handle different date formats. The input date might be in format:
 * 23-07-2014
 * 2014-07-23
 * 23/04/2014
 *
 */
function ajetlsurveys_couchDate2Mysql($doc){




    $dt = "";
    // if Fecha does not exist return createdAt date
    if (!array_key_exists("Fecha", $doc) ) {
      return ajetlsurveys_couchDateTime2Mysql($doc["createdAt"]);
    }

    $dt = $doc["Fecha"];
    $pos = stripos($dt, "octubre");

    if ($pos > 0){
        list($dd, $mm, $y) = explode("-", $dt);
        if (strlen($dd) == 1)
            $dd = '0'.$dd;
        if($mm === "octubre")
            $mm = '10';
        $newDt = $dd.'-'.$mm.'-'.$y;
        return " STR_TO_DATE('".$newDt."', '%d-%m-%Y')";
    }


    // date is in dd/mm/YYYY format
    $pos = stripos($dt, "/");

    if ($pos > 0)
        return " STR_TO_DATE('".$dt."', '%d/%m/%Y')";

    $pos = stripos($dt, "-");

    if ($pos > 0) {

        if (strlen($dt) < 8)
            return " null ";


        $pos1 = stripos($dt, "-");
        if ($pos1 === 2) // date is in format 23/05/2014
            return " STR_TO_DATE('" . $dt . "', '%d-%m-%Y')";
        else {
            $first5 = substr($dt, 0, 5);
            $last4 = substr($first5, 1);

            // it means the year has one additional character on front, e.g. 22014, 32014, etc..
            if ($last4 === "2014" || strstr($dt, '20104') || strstr($dt, '20147') || strstr($dt, '20014')){
                $endDt = substr($dt, 5);
                $dt = '2014'.$endDt;
            }else if ($last4 === "2013" || strstr($dt, '20103') || strstr($dt, '20137') || strstr($dt, '20013')){
                $endDt = substr($dt, 5);
                $dt = '2013'.$endDt;
            }

            return " STR_TO_DATE('" . $dt . "', '%Y-%m-%d')";
        }
    }else{
        //assume date is in 14032014 format
        return " STR_TO_DATE('" . $dt . "', '%d%m%Y')";
    }
}

/**
 *

 * Example: converts 23/10/2013 to STR_TO_DATE('23/10/2013', '%d/%m/%Y').
 *
 * Handle different date formats. The input date might be in format:
 * 0002-05-25
 * 23-05-2013
 * 19-2-14
 * 0014-02-20
 * 23-07-2014
 * 2014-07-23
 * 23/04/2014
 *
 */
function ajetlsurveys_processFecha($doc){
    if (!array_key_exists('Fecha', $doc))
        return " null ";

    $dt = $doc['Fecha'];



    if ($dt == null ) {
        //$dataCSV = ajetlsurveys_constructCSVData($doc, "", "", "");
        //ajetllog_error("ajetlsurveys", "INVALID DATE", "Fecha is missing.", $dataCSV, $doc['provider_id']);
        return " null ";
    }

    // first search if date is in format 2014-11-12T12:45:58-04:0 and strip all after "T"
    $pos = stripos($dt, 'T');
    if ( $pos > 0){
        $dt = substr($dt, 0, $pos -1);
    }

    // date is in dd/mm/YYYY format
    $pos = stripos($dt, "/");

    if ($pos > 0) {
        list($dd, $mm, $yyyy) = explode("/", $dt);


        $yyyy = ajetlsurveys_processYear($yyyy);

        // check if date is valid
        if (!checkdate((int)$mm, (int)$dd, (int)$yyyy)){

            // check for 2014-06-26
            list($yyyy, $mm, $dd ) = explode("/", $dt);
            $yyyy = ajetlsurveys_processYear($yyyy);

            if (!checkdate((int)$mm, (int)$dd, (int)$yyyy)) {
                $dataCSV = ajetlsurveys_constructCSVData($doc, $mm, $dd, $yyyy);
                ajetllog_error("ajetlsurveys", "INVALID DATE", "Fecha  no es válida ", $dataCSV, $doc['provider_id']);
                return " null ";
            }

            $dt = $yyyy.'/'.$mm.'/'.$dd;
            return " STR_TO_DATE('" . $dt . "', '%Y/%m/%d')";
        }

        $dt = $dd.'/'.$mm.'/'.$yyyy;
        return " STR_TO_DATE('" . $dt . "', '%d/%m/%Y')";
    }

    $pos = stripos($dt, "-");

    if ($pos > 0) {


        //0013-11-14

        //2014-11-0013

        list($dd, $mm, $yyyy) = explode("-", $dt);
        $yyyy = ajetlsurveys_processYear($yyyy);

        // check if date is valid
        if (!checkdate((int)$mm, (int)$dd, (int)$yyyy) || strlen($dd) > 2 ){

            // check for 2014-06-26
            list($yyyy, $mm, $dd ) = explode("-", $dt);
            $yyyy = ajetlsurveys_processYear($yyyy);

            if (!checkdate((int)$mm, (int)$dd, (int)$yyyy)) {
                $dataCSV = ajetlsurveys_constructCSVData($doc, $mm, $dd, $yyyy);
                ajetllog_error("ajetlsurveys", "INVALID DATE", "Fecha  no es válida", $dataCSV, $doc['provider_id']);
                return " null ";
            }

            $dt = $yyyy.'-'.$mm.'-'.$dd;
            return " STR_TO_DATE('" . $dt . "', '%Y-%m-%d')";
        }

        $dt = $yyyy.'-'.$mm.'-'.$dd;
        return " STR_TO_DATE('" . $dt . "', '%Y-%m-%d')";
    }else{
        //assume date is in 14032014 format
        $dd = substr($dt,0,2);
        $mm = substr($dt,2,2);
        $yyyy = substr($dt,4);

        $yyyy = ajetlsurveys_processYear($yyyy);

        // check if date is valid
        if (!checkdate((int)$mm, (int)$dd, (int)$yyyy)){
            $dataCSV = ajetlsurveys_constructCSVData($doc, $mm, $dd, $yyyy);
            ajetllog_error("ajetlsurveys", "INVALID DATE", "Fecha no es válida", $dataCSV, $doc['provider_id']);
            return " null ";
        }


        return " STR_TO_DATE('" . $dt . "', '%d%m%Y') ";
    }



    $dataCSV = ajetlsurveys_constructCSVData($doc, "", "", "");
    ajetllog_error("ajetlsurveys", "INVALID DATE", "Fecha de nacimiento no es válida", $dataCSV, $doc['provider_id']);

    return " null ";


}


/**
 * Constructs data in format UUID, provider_id, Nombre, Apellido, Barrio/Comunidad, Mes, Dia, Ano
 * @param $doc
 *
 */
function ajetlsurveys_constructCSVData($doc){
    $dataCSV = "";

    if (array_key_exists('Fecha', $doc)) {
        $dataCSV = $doc['Fecha'] . ',' . $doc['uuid'] . ',' . $doc['_id'];
    }else{
        $dataCSV = $doc['uuid'] . ',' . $doc['_id'];
    }



    return $dataCSV;

}

function ajetlsurveys_startsWith($haystack, $needle)
{
    $length = strlen($needle);
    return (substr($haystack, 0, $length) === $needle);
}


function ajetlsurveys_processYear($yyyy){
    // check for "-" and "/"
    if (stripos($yyyy, "/") > 0 || stripos($yyyy, "-") > 0) {
        //make some wrong year

        return '999999';
    }
    //0013-11-14

    // check if starts with '00'

    if (ajetlsurveys_startsWith($yyyy, '0')){
        $yyyy = 'XYZ'.$yyyy;
    }

    if (strlen($yyyy) == 4) {

        return ($yyyy);
    }


    // it means the year has one additional character on front, e.g. 22014, 32014, etc..
    if (stripos($yyyy, "3") > 0){
        return "2013";
    }else if (stripos($yyyy, "4") > 0){
        return "2014";
    }else if (stripos($yyyy, "5") > 0) {
        return "2015";
    } else if (stripos($yyyy, "6") > 0) {
        return "2016";
    }

    if (strlen($yyyy) != 4)
        $yyyy = "NOTVALID";

    return $yyyy;

}




